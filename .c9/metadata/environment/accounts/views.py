{"filter":false,"title":"views.py","tooltip":"/accounts/views.py","undoManager":{"mark":9,"position":9,"stack":[[{"start":{"row":3,"column":0},"end":{"row":4,"column":40},"action":"insert","lines":["def index(request):","    return render(request, 'index.html')"],"id":2}],[{"start":{"row":4,"column":40},"end":{"row":5,"column":0},"action":"insert","lines":["",""],"id":3},{"start":{"row":5,"column":0},"end":{"row":5,"column":4},"action":"insert","lines":["    "]},{"start":{"row":5,"column":4},"end":{"row":6,"column":0},"action":"insert","lines":["",""]},{"start":{"row":6,"column":0},"end":{"row":6,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":35},"action":"remove","lines":["from django.shortcuts import render"],"id":8},{"start":{"row":0,"column":0},"end":{"row":1,"column":41},"action":"insert","lines":["from django.shortcuts import render, redirect, reverse, HttpResponse","from django.contrib import auth, messages"]}],[{"start":{"row":4,"column":0},"end":{"row":7,"column":4},"action":"remove","lines":["def index(request):","    return render(request, 'index.html')","    ","    "],"id":9},{"start":{"row":4,"column":0},"end":{"row":10,"column":37},"action":"insert","lines":["def index(request):","    return render(request, 'index.html')","    ","def logout(request):","    auth.logout(request)","    messages.success(request, \"You have successfully been logged out\")","    return redirect(reverse('index'))"]}],[{"start":{"row":10,"column":37},"end":{"row":11,"column":0},"action":"insert","lines":["",""],"id":10},{"start":{"row":11,"column":0},"end":{"row":11,"column":4},"action":"insert","lines":["    "]},{"start":{"row":11,"column":4},"end":{"row":12,"column":0},"action":"insert","lines":["",""]},{"start":{"row":12,"column":0},"end":{"row":12,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":12,"column":0},"end":{"row":14,"column":40},"action":"insert","lines":["def login(request):","    \"\"\"Returns the login page\"\"\"","    return render(request, 'login.html')"],"id":11}],[{"start":{"row":14,"column":40},"end":{"row":14,"column":44},"action":"remove","lines":["    "],"id":12},{"start":{"row":14,"column":40},"end":{"row":15,"column":0},"action":"insert","lines":["",""]},{"start":{"row":15,"column":0},"end":{"row":15,"column":4},"action":"insert","lines":["    "]},{"start":{"row":15,"column":4},"end":{"row":16,"column":0},"action":"insert","lines":["",""]},{"start":{"row":16,"column":0},"end":{"row":16,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":13,"column":4},"end":{"row":14,"column":40},"action":"remove","lines":["\"\"\"Returns the login page\"\"\"","    return render(request, 'login.html')"],"id":13},{"start":{"row":13,"column":4},"end":{"row":18,"column":0},"action":"insert","lines":["\"\"\"Returns the login page\"\"\"","    login_form = UserLoginForm","    return render(request, 'login.html', {","        'form':login_form","    })",""]}],[{"start":{"row":12,"column":0},"end":{"row":20,"column":4},"action":"remove","lines":["def login(request):","    \"\"\"Returns the login page\"\"\"","    login_form = UserLoginForm","    return render(request, 'login.html', {","        'form':login_form","    })","","    ","    "],"id":14},{"start":{"row":12,"column":0},"end":{"row":31,"column":10},"action":"insert","lines":["def login(request):","    \"\"\"Returns the login page\"\"\"","    if request.method == 'POST':","        login_form = UserLoginForm(request.POST) # populate the form from what the user has keyed in","        if login_form.is_valid():","            # attempt to check the username and password is valid","            user = auth.authenticate(username=request.POST['username'],","                                     password=request.POST['password'])","            messages.success(request, \"You have successfully logged in\")","            if user:","                # log in the user","                auth.login(user=user, request=request)","                return redirect(reverse('index'))","            else:","                login_form.add_error('None', \"Invalid username or password\")","    else:","        login_form = UserLoginForm","        return render(request, 'login.html', {","            'form':login_form","        })"]}],[{"start":{"row":0,"column":0},"end":{"row":31,"column":10},"action":"remove","lines":["from django.shortcuts import render, redirect, reverse, HttpResponse","from django.contrib import auth, messages","","# Create your views here.","def index(request):","    return render(request, 'index.html')","    ","def logout(request):","    auth.logout(request)","    messages.success(request, \"You have successfully been logged out\")","    return redirect(reverse('index'))","    ","def login(request):","    \"\"\"Returns the login page\"\"\"","    if request.method == 'POST':","        login_form = UserLoginForm(request.POST) # populate the form from what the user has keyed in","        if login_form.is_valid():","            # attempt to check the username and password is valid","            user = auth.authenticate(username=request.POST['username'],","                                     password=request.POST['password'])","            messages.success(request, \"You have successfully logged in\")","            if user:","                # log in the user","                auth.login(user=user, request=request)","                return redirect(reverse('index'))","            else:","                login_form.add_error('None', \"Invalid username or password\")","    else:","        login_form = UserLoginForm","        return render(request, 'login.html', {","            'form':login_form","        })"],"id":16},{"start":{"row":0,"column":0},"end":{"row":73,"column":10},"action":"insert","lines":["from django.contrib.auth import get_user_model","from django.shortcuts import render, redirect, reverse, HttpResponse","from django.contrib import auth, messages","from django.contrib.auth.decorators import login_required","from .forms import UserLoginForm, UserRegistrationForm ","","# Create your views here.","def index(request):","    return render(request, 'index.html')","    ","def logout(request):","    auth.logout(request)","    messages.success(request, \"You have successfully been logged out\")","    return redirect(reverse('index'))","    ","def login(request):","    \"\"\"Returns the login page\"\"\"","    if request.method == 'POST':","        login_form = UserLoginForm(request.POST) # populate the form from what the user has keyed in","        if login_form.is_valid():","            # attempt to check the username and password is valid","            user = auth.authenticate(username=request.POST['username'],","                                     password=request.POST['password'])","            messages.success(request, \"You have successfully logged in\")","            if user:","                # log in the user","                auth.login(user=user, request=request)","                return redirect(reverse('index'))","            else:","                login_form.add_error('None', \"Invalid username or password\")","    else:","        login_form = UserLoginForm","        return render(request, 'login.html', {","            'form':login_form","        })","","@login_required    ","def profile(request):","    User = get_user_model()","    user = User.objects.get(email=request.user.email)","    return render(request, 'profile.html', {","        'user' : user","    })","","def register(request):","    User = get_user_model()","    if request.method == 'POST':","        form = UserRegistrationForm(request.POST)","        # NEW CODE STARTS HERE","        if form.is_valid():","            ","            #1 create the user","            form.save()","","            #2 check if the user has been created properly","            user = auth.authenticate(username=request.POST['username'],","                                     password=request.POST['password1'])","            if user:","                #3 if the user has been created successful, attempt to login","                auth.login(user=user, request=request)","                messages.success(request, \"You have successfully registered\")","            else:","                messages.error(request, \"Unable to register your account at this time\")","            return redirect(reverse('index'))","        #NEW CODE ENDS HERE","        else:","            return render(request, 'register.html', {","                'form':form","            })","    else:","        form = UserRegistrationForm()","        return render(request, 'register.html', {","            'form':form","        })"]}]]},"ace":{"folds":[],"scrolltop":670.5,"scrollleft":0,"selection":{"start":{"row":63,"column":9},"end":{"row":63,"column":9},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":54,"state":"start","mode":"ace/mode/python"}},"timestamp":1567132987513,"hash":"4d207aaf0b2d29145c535870c586d4bf4d70e444"}